An I AM user stands for one person within your company based on the roles and responsibilities. Different I AM users can be assigned to a group. If you need multiple users in your account, you can generate different unique credentials for each user based on business requirement. 

Different access permissions can be granted to I AM users. An I AM user group is a pool of I AM users. You can assign permissions to a group and add or remove one or more. I AM user to the group. For instance, you can create a user group named developer and grant desired permissions to the developer user group for performing the day job of a developer. 

An I AM role as an AWS identity with a set of permissions. A role can be assumed by an I AM user or EC2 instance or lambda who or which should complete the state a job or task. 

An I AM policy deals with actions regardless of the method which you use to perform an operation. Consider a policy which allows a get user, I am action that an I AM user with this policy can get the information about a specific user from AWS management console CLI or AWS API. While creating the user, you can choose to grant console or programmatic access, an attached desired policy based on business requirement. 

Aws managed policies are separate policies which are formed and controlled by Aws. A policy which will have own Amazon resource name A R N are treated as stand alone policy in Aws. The policies which are embedded in I AM identities like user group or roll are called in line policies. In other words, this policy is inherent part of identity. 

You can build stand alone policies under your Aws account which can be administered by you. These policies are termed as customer managed policies. After that, we can attach these policies to many principles under the AWS account. In this video, you will learn about the tasks which can be performed only by root users. Changing your account settings will include changing the account name, email address, root user, password, and root user access keys. Few other changes like updating contact information, currency of payment preference and changing the regions do not require Aws root user credentials. If there is only one IAM administrator and he or she accidentally revokes own permission, then one can sign as root user for editing and restoring those permissions.

Any Aws account can be closed only by root user. Aws will not close your account on your behalf. Any questions regarding the account can be discussed with your account representative or you can approach Aws support for any further assistance by default. 

Any IAM users or any roles under an Aws account are not allowed to access billing console. This holds good. Even if a role or I AM user are given policies, the grant access to few policies related to billing, you can change your email address, access, key and password for root users only with root user access, reserved instance marketplace extends support to sell third party and unused standard reserved instances from any Aws customers. 

Another layer of security can be added on SS three bucket by enabling M fa on it. It is helpful if your security credentials are compromised, you can update the bucket policy only as a root user. If there is an invalid VPC N point or VP C ID in the policy. If the VPC ID or VPC N point id in the bucket policy is invalid or typed wrongly, you will get an error to update this incorrect policy. You must have Aws account, root user access. 

If you want to sign up for AWS gov cloud us, you should meet all the requirements set by the US government and this can be only done through root user account. Aws root user account has full access to everything in your account and it can even close the account. If you have root account, you should not keep a copy of access keys with you. Either it should be deleted or deactivated. The main reason behind this is access keys cannot have an MFA device linked to them. 

So if anyone comes in possession of access key, they can use it and do remember that they have full access to your aws account. Adding M FA to your aws account forces you to enter the code every time you try to use your aws account with your user name and password. If someone steals your user name or password or if you have lost it, then no one can log in into account as they will need the hardware M fa device to do so avoid using root user account as only few tasks require this privilege. Other than that, all the tasks can be performed with the help of an IAM user.

It is always good to rely on a central identity management for your workforce. One person can manage the root account and provide access to all the I AM users based on their roles and responsibilities in this module. You have learn about usage of user and identity management, password policies and access keys, multi factor authentication, Aws, identity and access management, root account and its protection.